# 
# Make file for PHASTINPUT
#
PROGRAM=phastinput
.SUFFIXES : .o .c .cxx .cpp
.cpp.o :
	${CXX} ${CFLAGS}  -c -o $@ $<
.cxx.o :
	${CXX} ${CFLAGS} -c -o $@ $<
.c.o :
	${CXX} ${CFLAGS} -c -o $@ $<

#.SILENT:

# Linux
#CC=gcc
BOOST_ROOT=C:/3rdParty/boost_1_75_0
PHASTINPUT_INCLUDES = -I../phast/PhreeqcRM/src/IPhreeqcPhast/IPhreeqc/phreeqcpp -IPhastKeywords -I${BOOST_ROOT} -I../phast/PhreeqcRM/src/IPhreeqcPhast/IPhreeqc/phreeqcpp/common
VPATH    = ./../phast/PhreeqcRM/src/IPhreeqcPhast/IPhreeqc/phreeqcpp:../phast/PhreeqcRM/src/IPhreeqcPhast/IPhreeqc/phreeqcpp/common:./PhastKeywords

CXX=g++
CC=g++
CFLAGS=-O2 -Wall -ansi -pedantic -DANSI_DECLARATORS -DTRILIBRARY -DMINGW $(PHASTINPUT_INCLUDES)
#CFLAGS=-g -Wall -ansi -pedantic -DANSI_DECLARATORS -DTRILIBRARY $(PHASTINPUT_INCLUDES) # -DBOOST_UBLAS_UNSUPPORTED_COMPILER=0

# RS6000
#CC=cc
#CCFLAGS=-langlvl=ansi -O2

# Dec Alpha
#CC=cc
#CCFLAGS=-ansi -O2

#Solaris
#CC=/opt/SUNWspro/bin/cc
#CCFLAGS=-fast

LOADFLAGS= -lm 
LOADFLAGS+=$(call ld-option, -Wl$(comma)--hash-style=sysv)
#LOADFLAGS+= -lefence

FILES=\
	accumulate.cpp \
	ArcRaster.cpp \
	BC_info.cpp \
	check.cpp \
	Cube.cpp \
	Data_source.cpp \
	Domain.cpp \
	Drain.cpp \
	Exterior_cell.cpp \
	Filedata.cpp \
	getopt.cpp \
	gpc.cpp \
	Keywords.cpp \
	main.cpp \
	message.cpp \
	Parser.cxx \
	PHAST_Transform.cpp \
	PHAST_polygon.cpp \
	PHRQ_base.cxx \
	PHRQ_io.cpp \
	Point.cpp \
	Polygon_tree.cpp \
	Polyhedron.cpp \
	Prism.cpp \
	read.cpp \
	rivers.cpp \
	structures.cpp \
	time.cpp \
	unit_impl.cxx \
	units_impl.cxx \
	utilities.cpp \
	Utils.cxx \
	Wedge.cpp \
	wells.cpp \
	write.cpp  \
	XYZfile.cpp \
	XYZTfile.cpp \
	zone.cpp \
	Zone_budget.cpp

OBJECTS=\
	accumulate.o \
	check.o \
	Domain.o \
	getopt.o \
	gpc.o \
	gpc_helper.o \
	Keywords.o \
	main.o \
	message.o \
	Parser.o \
	PHRQ_base.o \
	PHRQ_io.o \
	read.o \
	rivers.o \
	structures.o \
	time.o \
	unit_impl.o \
	units_impl.o \
	utilities.o \
	Utils.o \
	wells.o \
	write.o \
	zone.o \
	ArcRaster.o \
	BC_info.o \
	Cube.o \
	Data_source.o \
	Drain.o \
	Exterior_cell.o \
	Filedata.o \
	PHAST_Transform.o \
	PHAST_polygon.o \
	Polygon_tree.o \
	Polyhedron.o \
	Prism.o \
	Wedge.o \
	XYZfile.o \
	XYZTfile.o \
	Zone_budget.o

NNI_OBJECTS= \
	NNInterpolator/delaunay.o \
	NNInterpolator/hash.o \
	NNInterpolator/istack.o \
	NNInterpolator/lpi.o \
	NNInterpolator/minell.o \
	NNInterpolator/nnai.o \
	NNInterpolator/nncommon.o \
	NNInterpolator/nncommon-vulnerable.o \
	NNInterpolator/NNInterpolator.o \
	NNInterpolator/nnpi.o \
	NNInterpolator/preader.o \
	NNInterpolator/triangle.o 

SHAPE_OBJECTS= \
	Shapefiles/dbfopen.o \
	Shapefiles/Shapefile.o \
	Shapefiles/shpopen.o \
	Shapefiles/shptree.o 

KDTREE_OBJECTS= \
	KDtree/kdtree2.o \
	KDtree/KDtree.o \
	KDtree/Point.o


	ALL_OBJECTS= $(OBJECTS) $(NNI_OBJECTS) $(SHAPE_OBJECTS) $(KDTREE_OBJECTS)

$(PROGRAM): $(ALL_OBJECTS)  
	$(CC) -o $(PROGRAM) $(ALL_OBJECTS) $(LOADFLAGS) 

-include dependencies

diff: 
	for FILE in $(FILES); do rcsdiff $$FILE ; done

clean:
	rm -f $(PROGRAM) *.o NNInterpolator/*.o Shapefiles/*.o KDtree/*.o
	echo Removed files generated by srcinput/Makefile."\n"

#ld-option
# Usage: ldflags += $(call ld-option, -Wl$(comma)--hash-style=sysv)
comma=,
ld-option = $(shell if $(CC) $(1) \
              -nostdlib -o /dev/null -xc /dev/null \
              > /dev/null 2>&1 ; then echo "$(1)" ; else echo "$(2)"; fi)

depends:
	gcc -MM -DBOOST_UBLAS_UNSUPPORTED_COMPILER=0 \
	-IPhastKeywords \
        *.cxx *.cpp \
	./NNInterpolator/*.c ./NNInterpolator/*.cpp \
        ./Shapefiles/*.c ./Shapefiles/*.cpp \
        ./KDtree/*.cpp \
        ../phast/PhreeqcRM/src/IPhreeqcPhast/IPhreeqc/phreeqcpp/PHRQ_io.cpp \
        ../phast/PhreeqcRM/src/IPhreeqcPhast/IPhreeqc/phreeqcpp/PHRQ_base.cxx \
        ../phast/PhreeqcRM/src/IPhreeqcPhast/IPhreeqc/phreeqcpp/Parser.cxx \
        ../phast/PhreeqcRM/src/IPhreeqcPhast/IPhreeqc/phreeqcpp/Utils.cxx \
        ./PhastKeywords/Keywords.cpp \
        > dependencies
