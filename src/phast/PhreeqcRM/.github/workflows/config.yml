name: autoconf/automake

on: [push]

env:
  VER: 3.7.1

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: ubuntu-latest

    # ${{runner.workspace}} is one level above  ${{github.workspace}}.
    # ${{github.workspace}} is where the repository is checked out
    # ie
    # github.workspace = /home/runner/work/phreeqcrm/phreeqcrm
    # runner.workspace = /home/runner/work/phreeqcrm

    steps:
    - uses: actions/checkout@v2

    - name: autoreconf
      run: autoreconf -fvi

    - name: Versioning
      run: ./jenkins-dist.sh -v ${VER}

    - name: Doxygen
      run: |
        sudo apt-get install doxygen
        cd Doxygen && make

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: mkdir ${{github.workspace}}/_build

    - name: Configure
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/_build
      run: ../configure --prefix=$(pwd)/INSTALL

    - name: Build
      working-directory: ${{github.workspace}}/_build
      shell: bash
      # make -j4 distcheck
      run: make -j2

    - name: Test
      working-directory: ${{github.workspace}}/_build
      shell: bash
      run: make check

    - name: Install
      working-directory: ${{github.workspace}}/_build
      shell: bash
      run: make install

    - name: Tarball
      working-directory: ${{github.workspace}}/_build
      shell: bash
      run: make dist
