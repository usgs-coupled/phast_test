<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="dist" name="phasthdf">
    <description>
        Builds phast.jar
    </description>
    
    <property name="ver" value="1.2"/>
    <property name="depr" value="on"/>

    <property location="." name="srcdir"/>
    <property location="src" name="src"/>
    <property location="build" name="build"/>
    <property location="build64" name="build64"/>
    <property location="dist" name="dist"/>
    <property location="dist64" name="dist64"/>
    <property location="apidoc" name="apidoc"/>
    <property location="build_test" name="build_test"/>
    <property location="build_test64" name="build_test64"/>
    <property location="lib" name="lib"/>
    <property location="lib64" name="lib64"/>
    <property location="lib/hdf-java/lib" name="hdf"/>
    <property location="lib64/hdf-java/lib" name="hdf64"/>
    <property location="${srcdir}/hdf-java" name="hdfjar"/>
  
    <target name="init">
        <!-- Create the time stamp -->
        <tstamp/>
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>
        <mkdir dir="${build64}"/>
        <mkdir dir="${build}/images"/>
        <mkdir dir="${build64}/images"/>
        <mkdir dir="${build_test}"/>
        <mkdir dir="${build_test64}"/>
        <mkdir dir="${dist}"/>
        <mkdir dir="${dist64}"/>
        <mkdir dir="${dist}/Linux"/>
        <mkdir dir="${dist64}/Linux"/>
        <mkdir dir="${dist}/Win32"/>
        <mkdir dir="${dist64}/Win32"/>
        <mkdir dir="${dist}/SunOS"/>
        <mkdir dir="${dist64}/SunOS"/>
        <mkdir dir="${apidoc}"/>
        <!-- extract jars and shared dlls/libs -->
        <mkdir dir="${lib}"/>
        <unjar src="${hdfjar}/solaris/hdf-java-2.3.jar" dest="${lib}"/>
        <unjar src="${hdfjar}/linux/hdf-java-2.3.jar" dest="${lib}"/>
        <unjar src="${hdfjar}/win/hdf-java-2.3.jar" dest="${lib}"/>
	<!-- x64 -->
        <mkdir dir="${lib64}"/>
        <untar src="${hdfjar}/linux64/hdf-java-2.6.1-bin.tar" dest="${lib64}"/>
        <untar src="${hdfjar}/win64/hdf-java-2.6.1-bin.tar" dest="${lib64}"/>
    </target>
    
    <target depends="init" description="compile the source" name="compile">
        <javac source="${ver}" target="${ver}" deprecation="${depr}" classpath="${hdf}/jhdf.jar;${hdf}/jhdf5.jar;${hdf}/jhdfobj.jar;${hdf}/jhdf5obj.jar" destdir="${build}" srcdir="${srcdir}/src">
        </javac>
        <copy file="${srcdir}/src/images/splash.jpeg" todir="${build}/images"/>
    </target>
    
    <target depends="init" description="compile the source" name="compile64">
        <javac source="${ver}" target="${ver}" deprecation="${depr}" classpath="${hdf64}/jhdf.jar;${hdf64}/jhdf5.jar;${hdf64}/jhdfobj.jar;${hdf64}/jhdf5obj.jar" destdir="${build64}" srcdir="${srcdir}/src">
        </javac>
        <copy file="${srcdir}/src/images/splash.jpeg" todir="${build64}/images"/>
    </target>    
    
    <target depends="init" description="Javadoc for Phast API." name="javadoc">
        <javadoc destdir="apidoc" packagenames="gov.usgs.phast.*,corejava.*,sample.*" windowtitle="Phast HDF5 Exporter" classpath="${hdf}/jhdf.jar;${hdf}/jhdf5.jar;${hdf}/jhdfobj.jar;${hdf}/jhdf5obj.jar">
            <sourcepath>
                <pathelement location="${srcdir}/src"/>
            </sourcepath>
        </javadoc>
    </target>    

    <target depends="init" description="Javadoc for Phast API." name="javadoc64">
        <javadoc destdir="apidoc" packagenames="gov.usgs.phast.*,corejava.*,sample.*" windowtitle="Phast HDF5 Exporter" classpath="${hdf64}/jhdf.jar;${hdf64}/jhdf5.jar;${hdf64}/jhdfobj.jar;${hdf64}/jhdf5obj.jar">
            <sourcepath>
                <pathelement location="${srcdir}/src"/>
            </sourcepath>
        </javadoc>
    </target>    

    <target depends="compile" description="generate the distribution" name="dist">
        <jar basedir="${build}" jarfile="${dist}/phast.jar">
        <manifest>
            <attribute name="Main-Class" value="gov.usgs.phast.JWizardFrame"/>
            <attribute name="Class-Path" value="jhdf.jar jhdf5.jar jhdfobj.jar jhdf5obj.jar"/>
        </manifest>
        </jar>
        <copy file="${hdf}/jhdf.jar" todir="${dist}"/>
        <copy file="${hdf}/jhdf5.jar" todir="${dist}"/>
        <copy file="${hdf}/jhdfobj.jar" todir="${dist}"/>
        <copy file="${hdf}/jhdf5obj.jar" todir="${dist}"/>
    </target>
    
    <target depends="compile64" description="generate the distribution" name="dist64">
        <jar basedir="${build64}" jarfile="${dist64}/phast.jar">
        <manifest>
            <attribute name="Main-Class" value="gov.usgs.phast.JWizardFrame"/>
            <attribute name="Class-Path" value="jhdf.jar jhdf5.jar jhdfobj.jar jhdf5obj.jar"/>
        </manifest>
        </jar>
        <copy file="${hdf64}/jhdf.jar" todir="${dist64}"/>
        <copy file="${hdf64}/jhdf5.jar" todir="${dist64}"/>
        <copy file="${hdf64}/jhdfobj.jar" todir="${dist64}"/>
        <copy file="${hdf64}/jhdf5obj.jar" todir="${dist64}"/>
    </target>
    
    
    <target depends="dist" description="generate the Windows distribution" name="dist-Win32">
        <copy todir="${dist}/Win32">
            <fileset dir="${hdf}/win"/>
        </copy>
    </target>
    
    <target depends="dist64" description="generate the Windows distribution" name="dist-Win64">
        <copy todir="${dist64}/Win32">
            <fileset dir="${hdf64}/win"/>
        </copy>
    </target>
    
    <target depends="dist" description="generate the Linux distribution" name="dist-Linux">
        <copy todir="${dist}/Linux">
            <fileset dir="${hdf}/linux"/>
        </copy>
    </target>
    
    <target depends="dist64" description="generate the Linux distribution" name="dist-Linux64">
        <copy todir="${dist64}/Linux">
            <fileset dir="${hdf64}/linux"/>
        </copy>
    </target>
    
    <target depends="dist" description="generate the Solaris distribution" name="dist-SunOS">
        <copy todir="${dist}/SunOS">
            <fileset dir="${hdf}/solaris"/>
        </copy>
    </target>
    
    <target depends="dist-Win32,dist-Linux,dist-SunOS" description="generate all of the distributions" name="dist-all">
    </target>    
        
    <target depends="dist-Win32" description="Try running it." name="run-Win32">
        <java dir="${dist}/Win32" failonerror="true" fork="true" jar="${dist}/phast.jar">
            <arg value="${dist}/../../examples/ex4/ex4.h5"/>
        </java>
    </target>

    <target depends="dist-Linux" description="Try running it." name="run-Linux">
        <java dir="${dist}/Linux" failonerror="true" fork="true" jar="${dist}/phast.jar">
            <sysproperty key="java.library.path" value="${dist}/Linux"/>
            <arg value="${dist}/../../examples/ex4/ex4.h5"/>
        </java>
    </target>

    <target depends="dist-Win32" description="Run in debug mode." name="run-debug">
        <java dir="${dist}/Win32" failonerror="true" fork="true" jar="${dist}/phast.jar">
            <sysproperty key="phast.debug" value="true"/>
            <arg value="${dist}/../../examples/ex4/ex4.h5"/>
        </java>
    </target>     

    <target depends="dist" description="Run in debug mode using the metal laf." name="run_metal">
        <java dir="${dist}/Win32" failonerror="true" fork="true" jar="${dist}/phast.jar">
            <sysproperty key="phast.debug" value="true"/>
            <sysproperty key="swing.defaultlaf" value="javax.swing.plaf.metal.MetalLookAndFeel"/>
            <arg value="${dist}/../../examples/ex4/ex4.h5"/>
        </java>
    </target>
    
    <target depends="dist" description="Run in debug mode using the metal laf." name="run_motif">
        <java dir="${dist}/Win32" failonerror="true" fork="true" jar="${dist}/phast.jar">
            <sysproperty key="phast.debug" value="true"/>
            <sysproperty key="swing.defaultlaf" value="com.sun.java.swing.plaf.motif.MotifLookAndFeel"/>
            <arg value="${dist}/../../examples/ex4/ex4.h5"/>
        </java>
    </target>     
    
    <target depends="compile" description="Run unit tests" name="test">
        <javac source="${ver}" target="${ver}" deprecation="${depr}" classpath="${build};${hdf}/jhdf.jar;${hdf}/jhdf5.jar;${hdf}/jhdfobj.jar;${hdf}/jhdf5obj.jar" destdir="${build_test}" srcdir="${srcdir}/test">
        </javac>
        <junit printsummary="withOutAndErr">
            <classpath path="${build};${build_test}"/>
            <test name="corejava.FormatTest"/>
        </junit>
    </target>    
        
    <target depends="compile64" description="Run unit tests" name="test64">
        <javac source="${ver}" target="${ver}" deprecation="${depr}" classpath="${build64};${hdf64}/jhdf.jar;${hdf64}/jhdf5.jar;${hdf64}/jhdfobj.jar;${hdf64}/jhdf5obj.jar" destdir="${build_test64}" srcdir="${srcdir}/test">
        </javac>
        <junit printsummary="withOutAndErr">
            <classpath path="${build64};${build_test64}"/>
            <test name="corejava.FormatTest"/>
        </junit>
    </target>    
    
    <target description="clean up" name="clean">
        <delete dir="${build}"/>
        <delete dir="${build64}"/>
        <delete dir="${build_test}"/>
        <delete dir="${build_test64}"/>
        <delete dir="${lib}"/>
        <delete dir="${lib64}"/>
        <delete dir="${dist}"/>
        <delete dir="${dist64}"/>
        <delete dir="${apidoc}"/>
    </target>
</project>
